using LabelledArrays: @LArray
using StaticArrays: SVector
using DynamicalSystemsBase: ContinuousDynamicalSystem

export LorenzTransitive9

"""
    LorenzTransitive9 <: ContinuousDefinition
    LorenzTransitive9(; xi = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.9, 0.9],
        σ₁ = 10.0, σ₂ = 10.0, σ₃ = 10.0,
        ρ₁ = 28.0, ρ₂ = 28.0, ρ₃ = 28.0,
        β₁ = 8/3,  β₂ = 8/3,  β₃ = 8.3,
        c₁₂ = 1.0, c₂₃ = 1.0)

Initialise a dynamical system consisting of three coupled Lorenz attractors with
a transitive causality chain where X₁ → X₂ and X₂ → X₃. In total, the three
3D-subsystems create a 9-dimensional dynamical system.

The strength of the forcing X₁ → X₂ is controlled by the parameter `c₁`, and
the forcing from X₂ → X₃ by `c₂`. The remaining parameters are the usual
parameters for the Lorenz system, where the subscript `i` refers to the
subsystem Xᵢ.

## Equations of motion

The dynamics is generated by the following vector field

```math
\\begin{aligned}
\\dot{x_1} &= \\sigma_1(y_1 - x_1) \\\\
\\dot{y_1} &= \\rho_1 x_1 - y_1 - x_1 z_1 \\\\
\\dot{z_1} &= x_1 y_1 - \\beta_1 z_1 \\\\
\\dot{x_2} &=  \\sigma_2 (y_2 - x_2) + c_{12}(x_1 - x_2) \\\\
\\dot{y_2} &= \\rho_2 x_2 - y_2 - x_2 z_2 \\\\
\\dot{z_2} &= x_2 y_2 - \\beta_2 z_2 \\\\
\\dot{x_3} &= \\sigma_3 (y_3 - x_3) + c_{23} (x_2 - x_3) \\\\
\\dot{y_3} &= \\rho_3 x_3 - y_3 - x_3 z_3 \\\\
\\dot{z_3} &= x_3 y_3 - \\beta_3 z_3
\\end{aligned}
```

## Usage in literature

This system was studied by Papana et al. (2013) for coupling strengths
``c_{12} = 0, 1, 3, 5`` and ``c_{23} = 0, 1, 3, 5``.
"""
Base.@kwdef struct LorenzTransitive9{V,S1,S2,S3,P1,P2,P3,B1,B2,B3,C1,C2} <: ContinuousDefinition
    xi::V = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.9, 0.9]
    σ₁::S1 = 10.0
    σ₂::S2 = 10.0
    σ₃::S3 = 10.0
    ρ₁::P1 = 28.0
    ρ₂::P2 = 28.0
    ρ₃::P3 = 28.0
    β₁::B1 = 8/3
    β₂::B2 = 8/3
    β₃::B3 = 8.3
    c₁₂::C1 = 1.0
    c₂₃::C2 = 1.0
end

function system(definition::LorenzTransitive9)
    return ContinuousDynamicalSystem(eom_lorenztransitive9, definition.xi, definition)
end

@inline @inbounds function eom_lorenztransitive9(u, p::LorenzTransitive9, t)
    x₁, y₁, z₁, x₂, y₂, z₂, x₃, y₃, z₃ = u
    (; xi, σ₁, σ₂, σ₃, ρ₁, ρ₂, ρ₃, β₁, β₂, β₃, c₁₂, c₂₃) = p

    # Subsystem 1
    dx₁ = σ₁*(y₁-x₁)
    dy₁ = ρ₁*x₁ - y₁ - x₁*z₁
    dz₁ = x₁*y₁ - β₁*z₁

    # Subsystem 2
    dx₂ = σ₂*(y₂-x₂) + c₁₂*(x₁ - x₂)
    dy₂ = ρ₂*x₂ - y₂ - x₂*z₂
    dz₂ = x₂*y₂ - β₂*z₂

    # Subsystem 3
    dx₃ = σ₃*(y₃-x₃) + c₂₃*(x₂ - x₃)
    dy₃ = ρ₃*x₃ - y₃ - x₃*z₃
    dz₃ = x₃*y₃ - β₃*z₃
    return SVector{9}(dx₁, dy₁, dz₁, dx₂, dy₂,dz₂, dx₃, dy₃, dz₃)
end
